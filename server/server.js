// const path = require('path');
import path from 'path';
// const express = require('express');
import express from 'express';
import cookieParser from 'cookie-parser';
const app = express();
const PORT = 3000;

// Handle parsing request body
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(cookieParser());

// Handle requests for static files
// Link to build folder generated by Vite (to serve bundle.js)
// app.use(express.static(path.resolve(__dirname, './src')));

// Routes
import userRouter from './routes/userRouter.js'
import lobbyRouter from './routes/lobbyRouter.js';
// import * as userRouter from './routes/userRouter.js';

app.use('/lobby', lobbyRouter);
app.use('/api/user', userRouter);

// Default error handler
app.use((req, res) => {
  return res.sendStatus(404);
});

app.use('/user', userRouter);
// Global error handler
app.use((err, req, res, next) => {
  const defaultErr = {
    log: 'Express error handler caught unknown middleware error',
    status: 400,
    message: { err: 'An error occurred' },
  };

  const errObj = Object.assign(defaultErr, err);
  console.error(errObj.log);

  return res.status(errObj.status).json((errObj.message));
});

// Start server
app.listen(PORT, () => {
  console.log(`Server listening on port: ${PORT}...`);
});

export default app;